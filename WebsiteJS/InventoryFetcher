var SteamTrade = require('steam-trade');
var steamTrade = new SteamTrade();
var LI = require('steam-trade');
var LI = new loadInventory();
var steamClient = new Steam.SteamClient();
var steamUser = new Steam.SteamUser(steamClient);
var steamFriends = new Steam.SteamFriends(steamClient);
var steamTrading = new Steam.SteamTrading(steamClient);
var steamTrade = new SteamTrade();
var webLoginKey;
var getInterface = require('steam-web-api');
var Steam = require('steam');
var SteamCrypto = require('steam-crypto');

var logOnDetails = {
  account_name: '',
  password: ''
};
try {
  var sha1 = require('crypto').createHash('sha1');
  sha1.end(require('fs').readFileSync('sentry'));
  logOnDetails.sha_sentryfile = sha1.read();
} catch (e) {}

function webAuth(callback) {
  var sessionKey = SteamCrypto.generateSessionKey();
  
  getInterface('ISteamUserAuth').post('AuthenticateUser', 1, {
    steamid: steamClient.steamID,
    sessionkey: sessionKey.encrypted,
    encrypted_loginkey: SteamCrypto.symmetricEncrypt(new Buffer(webLoginKey), sessionKey.plain)
  }, function(statusCode, body) {
    if (statusCode != 200) {
      // request a new login key first
      steamUser.requestWebAPIAuthenticateUserNonce(function(nonce) {
        webLoginKey = nonce.webapi_authenticate_user_nonce;
        webAuth(callback);
      });
      return;
    }
    var sessionID = Math.floor(Math.random() * 1000000000).toString();
    steamTrade.sessionID = sessionID;
    var cookies = [
      'sessionid=' + sessionID,
      'steamLogin=' + body.authenticateuser.token,
      'steamLoginSecure=' + body.authenticateuser.tokensecure
    ];
    console.log('got a new cookie:', cookies);
    cookies.forEach(function(cookie) {
        steamTrade.setCookie(cookie);
    });
    callback && callback();
  });
}

steamClient.connect();
steamClient.on('connected', function() {
  steamUser.logOn(logOnDetails);
});

steamClient.on('logOnResponse', function(logonResp) {
  if (logonResp.eresult == Steam.EResult.OK) {
    webLoginKey = logonResp.webapi_authenticate_user_nonce;
    console.log('Logged in!');
    steamFriends.setPersonaState(Steam.EPersonaState.Online);
    webAuth();
  } else {
    console.log('Logon fail: ' + logonResp.eresult);
  }
});
